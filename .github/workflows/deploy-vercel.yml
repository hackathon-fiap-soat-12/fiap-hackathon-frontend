name: Deploy React app VERCEL

on:
  workflow_dispatch:
    inputs:
      ENV:
        description: '⚙️ Ambiente (dev, staging, prd)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prd

      VITE_COGNITO_USER_POOL_ID:
        description: '⚙️ Cognito - User pool id'
        required: true
        default: ''
        type: string

      VITE_COGNITO_CLIENT_ID:
        description: '⚙️ Cognito - Client id'
        required: true
        default: ''
        type: string

      VITE_API_BASE_URL:
        description: '⚙️ Base API URL Gateway'
        required: true
        default: 'https://GATEWAY-HASH.execute-api.us-east-1.amazonaws.com/hackathon/v1'
        type: string

jobs:
  deploy:
    name: Build e Deploy para VERCEL
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout do Código
        uses: actions/checkout@v4

      - name: ⚙️ Instalar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 🏗️ Instalar Dependências
        run: npm install

      - name: 🔁 Preencher variaveis de ambiente
        run: |
          echo "VITE_COGNITO_USER_POOL_ID=${{ inputs.VITE_COGNITO_USER_POOL_ID }}" >> .env.production
          echo "VITE_COGNITO_CLIENT_ID=${{ inputs.VITE_COGNITO_CLIENT_ID }}" >> .env.production

      - name: 🔍 Verificar conteúdo do .env.production
        run: cat .env.production

      - name: 📦 Criar build do React baseado no ambiente
        run: |
          REACT_APP_ENV=${{ inputs.ENV }} \
          npm run build:${{ inputs.ENV }}

      - name: 📂 Verificar conteúdo do diretório antes do upload
        run: ls -la

      - name: 🔍 Verificar Diretório de Build (`dist/`)
        run: |
          if [ -d "dist" ]; then
            echo "✅ Build encontrado na pasta 'dist/'!"
          else
            echo "❌ ERRO: Diretório 'dist/' não encontrado!"
            exit 1
          fi

      - name: 🚀 Instalar a Vercel CLI
        run: npm install -g vercel

      - name: ☁️ Deploy para Vercel
        run: |
          DEPLOY_URL=$(vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --yes)
          echo "DEPLOY_URL=$DEPLOY_URL" >> $GITHUB_ENV
          echo "🔗 Deploy realizado! URL: $DEPLOY_URL"

      - name: Exibir a URL do Deploy
        run: |
          echo "🚀 A aplicação foi publicada em ${{ env.DEPLOY_URL }}"

      - name: ✅ Finalizado com Sucesso!
        run: |
          echo "🚀 Deploy concluído com sucesso! 🎉"
